
GccApplication_T1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  00000144  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000144  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000810  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00000898  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000377  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000c5  00000000  00000000  00000c8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029d  00000000  00000000  00000d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00000ff4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000d0  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  0000112c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	40 c0       	rjmp	.+128    	; 0x8e <__vector_6>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e0 ed       	ldi	r30, 0xD0	; 208
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a1 36       	cpi	r26, 0x61	; 97
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	35 d0       	rcall	.+106    	; 0xc4 <main>
  5a:	38 c0       	rjmp	.+112    	; 0xcc <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <io_init>:
#include <avr/io.h>
#include <avr/sfr_defs.h>
#include <avr/interrupt.h>
void io_init(void)
{
	DDRB=0xFF;
  5e:	8f ef       	ldi	r24, 0xFF	; 255
  60:	87 bb       	out	0x17, r24	; 23
	PORTB=0x00;
  62:	18 ba       	out	0x18, r1	; 24
	DDRC=0x0C;
  64:	9c e0       	ldi	r25, 0x0C	; 12
  66:	94 bb       	out	0x14, r25	; 20
	PORTC=0xF3;
  68:	93 ef       	ldi	r25, 0xF3	; 243
  6a:	95 bb       	out	0x15, r25	; 21
	DDRD=0x00;
  6c:	11 ba       	out	0x11, r1	; 17
	PORTD=0xFF;
  6e:	82 bb       	out	0x12, r24	; 18
}
  70:	08 95       	ret

00000072 <t1_init>:
void t1_init(void)
{
	OCR1A=1250;
  72:	82 ee       	ldi	r24, 0xE2	; 226
  74:	94 e0       	ldi	r25, 0x04	; 4
  76:	9b bd       	out	0x2b, r25	; 43
  78:	8a bd       	out	0x2a, r24	; 42
	TIMSK|=_BV(OCIE1A);
  7a:	89 b7       	in	r24, 0x39	; 57
  7c:	80 61       	ori	r24, 0x10	; 16
  7e:	89 bf       	out	0x39, r24	; 57
	TCCR1A=0x00;
  80:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=_BV(WGM12);
  82:	88 e0       	ldi	r24, 0x08	; 8
  84:	8e bd       	out	0x2e, r24	; 46
	TCCR1B|=_BV(CS11);
  86:	8e b5       	in	r24, 0x2e	; 46
  88:	82 60       	ori	r24, 0x02	; 2
  8a:	8e bd       	out	0x2e, r24	; 46
}
  8c:	08 95       	ret

0000008e <__vector_6>:
SIGNAL(TIMER1_COMPA_vect)
{
  8e:	1f 92       	push	r1
  90:	0f 92       	push	r0
  92:	0f b6       	in	r0, 0x3f	; 63
  94:	0f 92       	push	r0
  96:	11 24       	eor	r1, r1
  98:	8f 93       	push	r24
  9a:	9f 93       	push	r25
	static unsigned char i;
	i++;
  9c:	80 91 60 00 	lds	r24, 0x0060
  a0:	8f 5f       	subi	r24, 0xFF	; 255
  a2:	80 93 60 00 	sts	0x0060, r24
	if(i>100)
  a6:	85 36       	cpi	r24, 0x65	; 101
  a8:	30 f0       	brcs	.+12     	; 0xb6 <__vector_6+0x28>
	{
		PORTB^=_BV(PB0);
  aa:	98 b3       	in	r25, 0x18	; 24
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	89 27       	eor	r24, r25
  b0:	88 bb       	out	0x18, r24	; 24
		i=0;
  b2:	10 92 60 00 	sts	0x0060, r1
	}
}
  b6:	9f 91       	pop	r25
  b8:	8f 91       	pop	r24
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <main>:



int main(void)
{
	io_init();
  c4:	cc df       	rcall	.-104    	; 0x5e <io_init>
	t1_init();
  c6:	d5 df       	rcall	.-86     	; 0x72 <t1_init>
	sei();
  c8:	78 94       	sei
  ca:	ff cf       	rjmp	.-2      	; 0xca <main+0x6>

000000cc <_exit>:
  cc:	f8 94       	cli

000000ce <__stop_program>:
  ce:	ff cf       	rjmp	.-2      	; 0xce <__stop_program>
