
AVRGCC1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000000f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000090  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	1d d0       	rcall	.+58     	; 0x6e <main>
  34:	31 c0       	rjmp	.+98     	; 0x98 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <delay_ms>:
  38:	08 95       	ret

0000003a <led_out_a>:
  3a:	98 2f       	mov	r25, r24
  3c:	9f 73       	andi	r25, 0x3F	; 63
  3e:	98 bb       	out	0x18, r25	; 24
  40:	87 ff       	sbrs	r24, 7
  42:	02 c0       	rjmp	.+4      	; 0x48 <__SREG__+0x9>
  44:	ab 9a       	sbi	0x15, 3	; 21
  46:	01 c0       	rjmp	.+2      	; 0x4a <__SREG__+0xb>
  48:	ab 98       	cbi	0x15, 3	; 21
  4a:	86 ff       	sbrs	r24, 6
  4c:	02 c0       	rjmp	.+4      	; 0x52 <__SREG__+0x13>
  4e:	aa 9a       	sbi	0x15, 2	; 21
  50:	08 95       	ret
  52:	85 b3       	in	r24, 0x15	; 21
  54:	84 70       	andi	r24, 0x04	; 4
  56:	85 bb       	out	0x15, r24	; 21
  58:	08 95       	ret

0000005a <io_init>:
  5a:	8f ef       	ldi	r24, 0xFF	; 255
  5c:	87 bb       	out	0x17, r24	; 23
  5e:	18 ba       	out	0x18, r1	; 24
  60:	9c e0       	ldi	r25, 0x0C	; 12
  62:	94 bb       	out	0x14, r25	; 20
  64:	93 ef       	ldi	r25, 0xF3	; 243
  66:	95 bb       	out	0x15, r25	; 21
  68:	11 ba       	out	0x11, r1	; 17
  6a:	82 bb       	out	0x12, r24	; 18
  6c:	08 95       	ret

0000006e <main>:
  6e:	1f 93       	push	r17
  70:	cf 93       	push	r28
  72:	df 93       	push	r29
  74:	f2 df       	rcall	.-28     	; 0x5a <io_init>
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	03 c0       	rjmp	.+6      	; 0x80 <main+0x12>
  7a:	81 2f       	mov	r24, r17
  7c:	de df       	rcall	.-68     	; 0x3a <led_out_a>
  7e:	11 0f       	add	r17, r17
  80:	11 23       	and	r17, r17
  82:	d9 f7       	brne	.-10     	; 0x7a <main+0xc>
  84:	c8 e0       	ldi	r28, 0x08	; 8
  86:	d0 e0       	ldi	r29, 0x00	; 0
  88:	10 e8       	ldi	r17, 0x80	; 128
  8a:	81 2f       	mov	r24, r17
  8c:	d6 df       	rcall	.-84     	; 0x3a <led_out_a>
  8e:	16 95       	lsr	r17
  90:	21 97       	sbiw	r28, 0x01	; 1
  92:	d9 f7       	brne	.-10     	; 0x8a <main+0x1c>
  94:	11 e0       	ldi	r17, 0x01	; 1
  96:	f1 cf       	rjmp	.-30     	; 0x7a <main+0xc>

00000098 <_exit>:
  98:	f8 94       	cli

0000009a <__stop_program>:
  9a:	ff cf       	rjmp	.-2      	; 0x9a <__stop_program>
