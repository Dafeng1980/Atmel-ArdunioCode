
GccApp_int.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000140  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000898  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000003e2  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000011f  00000000  00000000  00000cfa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000035c  00000000  00000000  00000e19  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000008c  00000000  00000000  00001178  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000e5  00000000  00000000  00001204  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000097  00000000  00000000  000012e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	4c c0       	rjmp	.+152    	; 0x9c <__vector_1>
   4:	59 c0       	rjmp	.+178    	; 0xb8 <__vector_2>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec ee       	ldi	r30, 0xEC	; 236
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	3d d0       	rcall	.+122    	; 0xd4 <main>
  5a:	46 c0       	rjmp	.+140    	; 0xe8 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <DelayMs>:


void DelayMs(unsigned int ms)
{
	unsigned int i;
	for(i=0;i<ms;i++)
  5e:	00 97       	sbiw	r24, 0x00	; 0
  60:	61 f0       	breq	.+24     	; 0x7a <DelayMs+0x1c>
  62:	20 e0       	ldi	r18, 0x00	; 0
  64:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  66:	4a ef       	ldi	r20, 0xFA	; 250
  68:	50 e0       	ldi	r21, 0x00	; 0
  6a:	fa 01       	movw	r30, r20
  6c:	31 97       	sbiw	r30, 0x01	; 1
  6e:	f1 f7       	brne	.-4      	; 0x6c <DelayMs+0xe>
  70:	2f 5f       	subi	r18, 0xFF	; 255
  72:	3f 4f       	sbci	r19, 0xFF	; 255
  74:	28 17       	cp	r18, r24
  76:	39 07       	cpc	r19, r25
  78:	c1 f7       	brne	.-16     	; 0x6a <DelayMs+0xc>
  7a:	08 95       	ret

0000007c <io_init>:
	_delay_loop_2(250);
}
void io_init(void)
{
	DDRB=0xFF;
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	87 bb       	out	0x17, r24	; 23
	PORTB=0x00;
  80:	18 ba       	out	0x18, r1	; 24
	DDRC=0x0C;
  82:	9c e0       	ldi	r25, 0x0C	; 12
  84:	94 bb       	out	0x14, r25	; 20
	PORTC=0xF3;
  86:	93 ef       	ldi	r25, 0xF3	; 243
  88:	95 bb       	out	0x15, r25	; 21
	DDRD=0x00;
  8a:	11 ba       	out	0x11, r1	; 17
	PORTD=0xFF;
  8c:	82 bb       	out	0x12, r24	; 18
}
  8e:	08 95       	ret

00000090 <int_init>:
void int_init(void)
{
	cli();
  90:	f8 94       	cli
	MCUCR=0x00;
  92:	15 be       	out	0x35, r1	; 53
	GICR=_BV(INT1)|_BV(INT0);
  94:	80 ec       	ldi	r24, 0xC0	; 192
  96:	8b bf       	out	0x3b, r24	; 59
	sei();
  98:	78 94       	sei
}
  9a:	08 95       	ret

0000009c <__vector_1>:
SIGNAL(INT0_vect)
{
  9c:	1f 92       	push	r1
  9e:	0f 92       	push	r0
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	0f 92       	push	r0
  a4:	11 24       	eor	r1, r1
	PORTB|=1<<PB0;
  a6:	c0 9a       	sbi	0x18, 0	; 24
	while((PIND&_BV(PD2))==0);
  a8:	82 9b       	sbis	0x10, 2	; 16
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <__vector_1+0xc>
	PORTB&=~_BV(PB0);
  ac:	c0 98       	cbi	0x18, 0	; 24
	
}
  ae:	0f 90       	pop	r0
  b0:	0f be       	out	0x3f, r0	; 63
  b2:	0f 90       	pop	r0
  b4:	1f 90       	pop	r1
  b6:	18 95       	reti

000000b8 <__vector_2>:
SIGNAL(INT1_vect)
{
  b8:	1f 92       	push	r1
  ba:	0f 92       	push	r0
  bc:	0f b6       	in	r0, 0x3f	; 63
  be:	0f 92       	push	r0
  c0:	11 24       	eor	r1, r1
	PORTB|=1<<PB1;
  c2:	c1 9a       	sbi	0x18, 1	; 24
	while((PIND&_BV(PB3))==0);
  c4:	83 9b       	sbis	0x10, 3	; 16
  c6:	fe cf       	rjmp	.-4      	; 0xc4 <__vector_2+0xc>
	PORTB&=~_BV(PB1);
  c8:	c1 98       	cbi	0x18, 1	; 24
}
  ca:	0f 90       	pop	r0
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	0f 90       	pop	r0
  d0:	1f 90       	pop	r1
  d2:	18 95       	reti

000000d4 <main>:

int main(void)
{
	io_init();
  d4:	d3 df       	rcall	.-90     	; 0x7c <io_init>
	int_init();
  d6:	dc df       	rcall	.-72     	; 0x90 <int_init>
	
    while(1)
    {
		DelayMs(200);
		PORTB^=0x10;
  d8:	c0 e1       	ldi	r28, 0x10	; 16
	io_init();
	int_init();
	
    while(1)
    {
		DelayMs(200);
  da:	88 ec       	ldi	r24, 0xC8	; 200
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	bf df       	rcall	.-130    	; 0x5e <DelayMs>
		PORTB^=0x10;
  e0:	88 b3       	in	r24, 0x18	; 24
  e2:	8c 27       	eor	r24, r28
  e4:	88 bb       	out	0x18, r24	; 24
  e6:	f9 cf       	rjmp	.-14     	; 0xda <main+0x6>

000000e8 <_exit>:
  e8:	f8 94       	cli

000000ea <__stop_program>:
  ea:	ff cf       	rjmp	.-2      	; 0xea <__stop_program>
